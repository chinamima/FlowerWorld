package com.flowerworld.app.dao.base;


import android.database.sqlite.SQLiteDatabase;
import com.flowerworld.app.dao.bean.Favorites;
import com.flowerworld.app.dao.bean.Friend;
import com.flowerworld.app.dao.bean.FriendGroup;
import com.flowerworld.app.dao.beandao.FavoritesDao;
import com.flowerworld.app.dao.beandao.FriendDao;
import com.flowerworld.app.dao.beandao.FriendGroupDao;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig friendDaoConfig;
    private final DaoConfig friendGroupDaoConfig;
    private final DaoConfig favoritesDaoConfig;

    private final FriendDao friendDao;
    private final FriendGroupDao friendGroupDao;
    private final FavoritesDao favoritesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        friendGroupDaoConfig = daoConfigMap.get(FriendGroupDao.class).clone();
        friendGroupDaoConfig.initIdentityScope(type);

        favoritesDaoConfig = daoConfigMap.get(FavoritesDao.class).clone();
        favoritesDaoConfig.initIdentityScope(type);

        friendDao = new FriendDao(friendDaoConfig, this);
        friendGroupDao = new FriendGroupDao(friendGroupDaoConfig, this);
        favoritesDao = new FavoritesDao(favoritesDaoConfig, this);

        registerDao(Friend.class, friendDao);
        registerDao(FriendGroup.class, friendGroupDao);
        registerDao(Favorites.class, favoritesDao);
    }
    
    public void clear() {
        friendDaoConfig.getIdentityScope().clear();
        friendGroupDaoConfig.getIdentityScope().clear();
        favoritesDaoConfig.getIdentityScope().clear();
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public FriendGroupDao getFriendGroupDao() {
        return friendGroupDao;
    }

    public FavoritesDao getFavoritesDao() {
        return favoritesDao;
    }

}
